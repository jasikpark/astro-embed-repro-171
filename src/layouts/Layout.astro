---
import GoVoteBanner from "#components/GoVoteBanner.astro";
import type { ImageMetadata } from "astro";
import { Head } from "astro-capo";
import { Icon } from "astro-icon/components";
import { getImage } from "astro:assets";
import { SITE_TITLE } from "src/site-config-vars";
import { z } from "zod";
import defaultOgImage from "#assets/og-image.png";

export type Props = {
  title: string;
  description?: string;
  ogImage?: ImageMetadata;
  ogImageAlt?: string;
};

const {
  title,
  description,
  ogImage = defaultOgImage,
  ogImageAlt = "Bowl of TARDIS with Caleb's face next to it",
} = Astro.props;

const ogImageDeets = await getImage({
  src: ogImage,
});

const ogImageDeetsAttributes = ogImageDeets.attributes as Record<string, unknown>;
---

<!doctype html>
<html lang="en">
  <Head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/icon.svg" />
    <meta name="color-scheme" content="dark light" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />

    <!-- Facebook Meta Tags -->
    <meta property="og:url" content={Astro.url} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageDeets.src} />
    <meta property="og:image:alt" content={ogImageAlt} />
    <meta
      property="og:image:width"
      content={z.number().parse(ogImageDeetsAttributes.width).toString()}
    />
    <meta
      property="og:image:height"
      content={z.number().parse(ogImageDeetsAttributes.height).toString()}
    />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={Astro.site} />
    <meta property="twitter:url" content={Astro.url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage.src} />

    <link
      rel="alternate"
      type="application/rss+xml"
      title={SITE_TITLE}
      href={new URL("rss.xml", Astro.site).toString()}
    />
  </Head>
  <body>
    <GoVoteBanner />
    <slot />
    <footer>
      <div>
        <a href="/keystatic/">Admin panel</a>
        <a href="https://app.netlify.com/sites/jasik-2-point-0/deploys"
          ><img
            loading="eager"
            width="119"
            height="20"
            src="https://api.netlify.com/api/v1/badges/b93bd50c-4b2c-4a63-9d1e-d651042eee6e/deploy-status"
            alt="Netlify Status"
          /></a
        >
        <a href="https://mas.to/@calebjasik" rel="me"
          ><span class="sr-only">Mastodon @calebjasik</span><Icon
            name="ri:mastodon-fill"
            aria-hidden="true"
          /></a
        >
        <a href="https://twitter.com/calebjasik" rel="me"
          ><span class="sr-only">Twitter @calebjasik</span><Icon
            name="ri:twitter-fill"
            aria-hidden="true"
          /></a
        >
        <a href="https://github.com/jasikpark" rel="me"
          ><span class="sr-only">GitHub @jasikpark</span><Icon
            name="ri:github-fill"
            aria-hidden="true"
          /></a
        >
      </div>
    </footer>
    <style is:global>
      @import url("../styles/link-preview.css");

      :root {
        --accent: oklch(54.13% 0.247 293.01);
        --accent-gradient: linear-gradient(
          45deg,
          var(--accent),
          oklch(67.56% 0.188 335.05) 30%,
          white 60%
        );
        --body-margin-inline: 0.5rem;
      }
      html {
        color-scheme: light dark;
        font-family: system-ui, sans-serif;
        background-color: light-dark(oklch(97.31% 0 0), oklch(17.76% 0 0));
      }

      body {
        margin: 0;
      }

      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }

      a:link {
        color: light-dark(
          oklch(49.7% 0.2972777928415759 264.05202063805507),
          oklch(86.25% 0.067 268.23)
        );
      }

      a:visited {
        color: light-dark(oklch(31.9% 0.172 302.15), oklch(89.87% 0.058 302.99));
      }

      footer {
        margin-bottom: 2em;
      }

      footer > * {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
      }

      header,
      article,
      footer,
      .full-bleed-container {
        line-height: 1.4;
        display: grid;
        grid-template-columns: 1fr min(66ch, calc(100% - (2 * var(--body-margin-inline)))) 1fr;
        grid-column-gap: var(--body-margin-inline);
      }

      header > *,
      article > *,
      footer > *,
      .full-bleed-container > * {
        grid-column: 2;
      }

      /** Use to allow elements to go fullpage, interacts with the grid above. */
      .full-bleed {
        width: 100%;
        grid-column: 1 / -1;
      }

      iframe {
        border: solid 1px oklch(0% 0 0 / 0.1);
      }

      .sr-only {
        border: 0 !important;
        clip: rect(1px, 1px, 1px, 1px) !important;
        -webkit-clip-path: inset(50%) !important;
        clip-path: inset(50%) !important;
        height: 1px !important;
        overflow: hidden !important;
        margin: -1px !important;
        padding: 0 !important;
        position: absolute !important;
        width: 1px !important;
        white-space: nowrap !important;
      }
    </style>
    <!-- Cloudflare Web Analytics -->
    <script
      is:inline
      defer
      src="https://static.cloudflareinsights.com/beacon.min.js"
      data-cf-beacon='{"token": "6fe619414aca43ac8875f08fc2c58796"}'
    ></script><!-- End Cloudflare Web Analytics -->
  </body>
</html>
